version: "3.9"

services:
  reverse-proxy:
    image: traefik:v2.8
    container_name: demo_reverse_proxy
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      - --providers.docker
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - demo-web
      - demo-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.service=api@internal"

  database:
    build:
      context: ./database
    container_name: demo_database
    shm_size: "2gb"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: demo_data
    ports:
      - "127.0.0.1:5433:5432"
    # Ephemeral DB: lives in RAM, rebuilt on each start
    tmpfs:
      - /var/lib/postgresql/data
    volumes:
      - ./tests/demo_data/csv:/docker-entrypoint-initdb.d/csv:ro
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql:ro
      - ./database/load-data.sql:/docker-entrypoint-initdb.d/02-load-data.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "psql -U postgres -d demo_data -c 'SELECT molecule_id FROM molecule LIMIT 1;' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - demo-db

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: demo_backend
    environment:
      POSTGRES_SERVER: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWD: postgres   
      POSTGRES_DB: demo_data
      API_PREFIX: demo
    entrypoint: bash prestart.sh 
    # If prestart.sh doesn't exec the server, this container will exit.
    # You can still pass args to prestart.sh via command: ["--any-flags"]
    working_dir: /app
    volumes:
      - ./backend/app:/app
    depends_on:
      database:
        condition: service_healthy
    networks:
      - demo-web
      - demo-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.demo_backend.rule=Host(`localhost`) && PathPrefix(`/api/demo`)"
      - "traefik.http.services.demo_backend.loadbalancer.server.port=8080"

  cdk-depict:
    image: simolecule/cdkdepict:latest
    container_name: demo_cdk_depict
    networks:
      - demo-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cdk-depict.rule=Host(`localhost`) && PathPrefix(`/depict`)"

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: demo_frontend
    environment:
      - VITE_BASE_URL=/demo
    entrypoint: ash renameBase.sh
    volumes:
      - "./tests/demo_data/public:/app/public"
      - "./frontend/src:/app/src"
    networks:
      - demo-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.demo_frontend.rule=Host(`localhost`) && PathPrefix(`/demo`)"
      - "traefik.http.services.demo_frontend.loadbalancer.server.port=3000"
    # Live-reload mounts now enabled above for development

networks:
  demo-web:
    name: demo-web
  demo-db:
    name: demo-db
