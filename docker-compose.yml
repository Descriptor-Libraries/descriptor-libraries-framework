version: '3'

services:
  local_reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.8
    # Enables the web UI and tells Traefik to listen to docker
    container_name: local_reverse_proxy
    command: 
      - --api.insecure=true 
      - --api.dashboard=true
      - --api.debug=true
      - --providers.docker
      - --entrypoints.web.address=:80
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - local-web
      - local-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.service=api@internal"

  descriptor_database:
    image: 'rdkit-postgres:latest'
    container_name: descriptor_database
    shm_size: '4gb'
    environment:
      POSTGRES_SERVER: database
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - "postgres16:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "psql -U postgres -d kraken_data -c 'SELECT molecule_id FROM molecule LIMIT 1;' || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - local-db

  descriptor_backend:
    image: 'descriptor-backend:latest'
    container_name: kraken_backend
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    volumes:
      - "./backend/app:/app"
    environment:
      POSTGRES_SERVER: descriptor_database
      POSTGRES_USER: postgres
      POSTGRES_DB: kraken_data
      API_PREFIX: kraken
    entrypoint: bash prestart.sh
    depends_on:
      descriptor_database:
        condition: service_healthy
    networks:
      - local-web
      - local-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kraken_backend.rule=Host(`localhost`) && PathPrefix(`/api/kraken`)"
      - "traefik.http.services.kraken_backend.loadbalancer.server.port=8080"

  local_cdk-depict:
    image: 'simolecule/cdkdepict:latest'
    container_name: local_cdk-depcit
    networks:
      - local-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cdk-depict.rule=Host(`localhost`) && PathPrefix(`/depict`)"

  descriptor_frontend:
    image: 'descriptor-frontend:latest'
    container_name: kraken_frontend
    volumes:
      - "./frontend/src:/app/src"
      - "./frontend/public:/app/public"
    environment:
      - VITE_BASE_URL=/descriptor
    build:
      context: .
      dockerfile: frontend.development.dockerfile
    networks:
      - local-web
    entrypoint: npm run start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) && PathPrefix(`/descriptor`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  local_documentation:
    image: "phosphines-docs:latest"
    container_name: local_documentation
    build:
      context: ./docs
      dockerfile: docs.dockerfile
    entrypoint: bash start.sh
    volumes:
      - "./docs:/docs"
    networks:
      - local-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.documentation.rule=Host(`localhost`) && PathPrefix(`/docs`)"
      - "traefik.http.services.documentation.loadbalancer.server.port=5000"
    

networks:
  local-web:
  local-db:

volumes:
  postgres16:
      external: true

