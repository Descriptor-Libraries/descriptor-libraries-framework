version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.8
    # Enables the web UI and tells Traefik to listen to docker
    container_name: reverse_proxy
    command: 
      - --api.insecure=true 
      - --api.dashboard=true
      - --api.debug=true
      - --providers.docker
      - --entrypoints.web.address=:80
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      #
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.service=api@internal"

  database:
    image: 'mcs07/postgres-rdkit'
    container_name: database
    shm_size: '4gb'
    ports:
      - "5432:5432"
    volumes:
      - "kraken-postgres:/var/lib/postgresql/data"
      - "pr3:/home/db"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: postgres
    networks:
      - db

  backend:
    image: 'phosphines-backend:latest'
    container_name: backend
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    volumes:
      - "./backend/app:/app"
    environment:
      POSTGRES_SERVER: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWD: $POSTGRES_PWD
      POSTGRES_DB: postgres
    entrypoint: bash prestart.sh
    networks:
      - web
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`) || Host(`147.182.187.35`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

  cdk-depict:
    image: 'simolecule/cdkdepict:latest'
    container_name: cdk_depict
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cdk-depict.rule=Host(`localhost`) && PathPrefix(`/depict`) || Host(`147.182.187.35`) && PathPrefix(`/depict`)"

  frontend:
    image: 'phosphines-frontend:latest'
    container_name: frontend
    volumes:
      - "./frontend/src:/app/src"
    build:
      context: .
      dockerfile: frontend.dockerfile
    networks:
      - web
    entrypoint: npm start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) || Host(`147.182.187.35`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  documentation:
    image: "phosphines-docs:latest"
    container_name: documentation
    build:
      context: ./docs
      dockerfile: docs.dockerfile
    entrypoint: bash start.sh
    volumes:
      - "./docs:/docs"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.documentation.rule=Host(`localhost`) && PathPrefix(`/docs`) || Host(`147.182.187.35`) && PathPrefix(`/docs`)"
      - "traefik.http.services.documentation.loadbalancer.server.port=5000"
    

networks:
  web:
  db:

volumes:
  kraken-postgres:
      external: true
  pr3:
      external: true